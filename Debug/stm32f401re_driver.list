
stm32f401re_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000674  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000808  08000808  00020020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000808  08000808  00020020  2**0
                  CONTENTS
  4 .ARM          00000000  08000808  08000808  00020020  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000808  08000808  00020020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000808  08000808  00010808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800080c  0800080c  0001080c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000020  20000000  08000810  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000020  08000830  00020020  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000003c  08000830  0002003c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020020  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002004a  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000f23  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000288  00000000  00000000  00020fb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b0  00000000  00000000  00021238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000077  00000000  00000000  000212e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000012c5  00000000  00000000  0002135f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000bf1  00000000  00000000  00022624  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005397  00000000  00000000  00023215  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000001ec  00000000  00000000  000285ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005c  00000000  00000000  00028798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000020 	.word	0x20000020
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080007f0 	.word	0x080007f0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000024 	.word	0x20000024
 80001d0:	080007f0 	.word	0x080007f0

080001d4 <delay>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

static void delay(uint32_t Time_u32)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
	for(uint32_t i = 0; i<Time_u32; i++);
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]
 80001e0:	e002      	b.n	80001e8 <delay+0x14>
 80001e2:	68fb      	ldr	r3, [r7, #12]
 80001e4:	3301      	adds	r3, #1
 80001e6:	60fb      	str	r3, [r7, #12]
 80001e8:	68fa      	ldr	r2, [r7, #12]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	429a      	cmp	r2, r3
 80001ee:	d3f8      	bcc.n	80001e2 <delay+0xe>
}
 80001f0:	bf00      	nop
 80001f2:	bf00      	nop
 80001f4:	3714      	adds	r7, #20
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bc80      	pop	{r7}
 80001fa:	4770      	bx	lr

080001fc <main>:
	.p_Gpio_Base_st = GPIOB,
	.p_Gpio_Config_st = &Config2
};

int main(void)
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	af00      	add	r7, sp, #0
	RCC_GPIOB_CLK_EN();
 8000200:	4b08      	ldr	r3, [pc, #32]	; (8000224 <main+0x28>)
 8000202:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000204:	4a07      	ldr	r2, [pc, #28]	; (8000224 <main+0x28>)
 8000206:	f043 0302 	orr.w	r3, r3, #2
 800020a:	6313      	str	r3, [r2, #48]	; 0x30
	Gpio_Init(&ConfigLed);
 800020c:	4806      	ldr	r0, [pc, #24]	; (8000228 <main+0x2c>)
 800020e:	f000 f84b 	bl	80002a8 <Gpio_Init>
	Gpio_Init(&ConfigBt);
 8000212:	4806      	ldr	r0, [pc, #24]	; (800022c <main+0x30>)
 8000214:	f000 f848 	bl	80002a8 <Gpio_Init>
	Gpio_IrqConfig(IRQ_NUM_EXTI2, 2U, ENABLE);
 8000218:	2201      	movs	r2, #1
 800021a:	2102      	movs	r1, #2
 800021c:	2008      	movs	r0, #8
 800021e:	f000 f9fb 	bl	8000618 <Gpio_IrqConfig>
	while(1);
 8000222:	e7fe      	b.n	8000222 <main+0x26>
 8000224:	40023800 	.word	0x40023800
 8000228:	20000008 	.word	0x20000008
 800022c:	20000018 	.word	0x20000018

08000230 <EXTI2_IRQHandler>:
//    /* Loop forever */
//	for(;;);
}

void EXTI2_IRQHandler(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	af00      	add	r7, sp, #0
	delay(500000);
 8000234:	4805      	ldr	r0, [pc, #20]	; (800024c <EXTI2_IRQHandler+0x1c>)
 8000236:	f7ff ffcd 	bl	80001d4 <delay>
	Gpio_IrqHandler(GPIO_PINNUM_2);
 800023a:	2002      	movs	r0, #2
 800023c:	f000 fa94 	bl	8000768 <Gpio_IrqHandler>
	Gpio_ToggleOutPin(GPIOB, GPIO_PINNUM_1);
 8000240:	2101      	movs	r1, #1
 8000242:	4803      	ldr	r0, [pc, #12]	; (8000250 <EXTI2_IRQHandler+0x20>)
 8000244:	f000 f9d4 	bl	80005f0 <Gpio_ToggleOutPin>
}
 8000248:	bf00      	nop
 800024a:	bd80      	pop	{r7, pc}
 800024c:	0007a120 	.word	0x0007a120
 8000250:	40020400 	.word	0x40020400

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 fa91 	bl	80007a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ffb9 	bl	80001fc <main>

0800028a <LoopForever>:

LoopForever:
  b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000020 	.word	0x20000020
  ldr r2, =_sidata
 8000298:	08000810 	.word	0x08000810
  ldr r2, =_sbss
 800029c:	20000020 	.word	0x20000020
  ldr r4, =_ebss
 80002a0:	2000003c 	.word	0x2000003c

080002a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC_IRQHandler>
	...

080002a8 <Gpio_Init>:
 */
#include "gpio.h"
#include "stub.h"

void Gpio_Init(const Gpio_Handle *p_GpioCfg_st)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b085      	sub	sp, #20
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
	uint32_t TempValue_u32;
	uint8_t Temp_u8;
	uint8_t Pos_u8;

	/* Pin mode Configuration */
	TempValue_u32 = p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinMode_e << (2 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	685b      	ldr	r3, [r3, #4]
 80002b4:	785b      	ldrb	r3, [r3, #1]
 80002b6:	461a      	mov	r2, r3
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	685b      	ldr	r3, [r3, #4]
 80002bc:	781b      	ldrb	r3, [r3, #0]
 80002be:	005b      	lsls	r3, r3, #1
 80002c0:	fa02 f303 	lsl.w	r3, r2, r3
 80002c4:	60fb      	str	r3, [r7, #12]
	/* Because number of bit is larger than 1, so need to clear before write */
	p_GpioCfg_st->p_Gpio_Base_st->MODER &= ~(0x3 << (2 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e));
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	681a      	ldr	r2, [r3, #0]
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	685b      	ldr	r3, [r3, #4]
 80002d0:	781b      	ldrb	r3, [r3, #0]
 80002d2:	005b      	lsls	r3, r3, #1
 80002d4:	2103      	movs	r1, #3
 80002d6:	fa01 f303 	lsl.w	r3, r1, r3
 80002da:	43db      	mvns	r3, r3
 80002dc:	4619      	mov	r1, r3
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	400a      	ands	r2, r1
 80002e4:	601a      	str	r2, [r3, #0]
	p_GpioCfg_st->p_Gpio_Base_st->MODER |= TempValue_u32;
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	6819      	ldr	r1, [r3, #0]
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	68fa      	ldr	r2, [r7, #12]
 80002f2:	430a      	orrs	r2, r1
 80002f4:	601a      	str	r2, [r3, #0]

	/* Pin output type Configuration */
	TempValue_u32 = p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinOutType_e << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e;
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	685b      	ldr	r3, [r3, #4]
 80002fa:	791b      	ldrb	r3, [r3, #4]
 80002fc:	461a      	mov	r2, r3
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	685b      	ldr	r3, [r3, #4]
 8000302:	781b      	ldrb	r3, [r3, #0]
 8000304:	fa02 f303 	lsl.w	r3, r2, r3
 8000308:	60fb      	str	r3, [r7, #12]
	p_GpioCfg_st->p_Gpio_Base_st->OTYPER |= TempValue_u32;
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	6859      	ldr	r1, [r3, #4]
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	68fa      	ldr	r2, [r7, #12]
 8000316:	430a      	orrs	r2, r1
 8000318:	605a      	str	r2, [r3, #4]

	/* Pin output speed configuration */
	TempValue_u32 = p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinSpeed_e << (2 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	685b      	ldr	r3, [r3, #4]
 800031e:	789b      	ldrb	r3, [r3, #2]
 8000320:	461a      	mov	r2, r3
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	685b      	ldr	r3, [r3, #4]
 8000326:	781b      	ldrb	r3, [r3, #0]
 8000328:	005b      	lsls	r3, r3, #1
 800032a:	fa02 f303 	lsl.w	r3, r2, r3
 800032e:	60fb      	str	r3, [r7, #12]
	/* Because number of bit is larger than 1, so need to clear before write */
	p_GpioCfg_st->p_Gpio_Base_st->OSPEEDR &= ~(0x3 << (2 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e));
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	689a      	ldr	r2, [r3, #8]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	685b      	ldr	r3, [r3, #4]
 800033a:	781b      	ldrb	r3, [r3, #0]
 800033c:	005b      	lsls	r3, r3, #1
 800033e:	2103      	movs	r1, #3
 8000340:	fa01 f303 	lsl.w	r3, r1, r3
 8000344:	43db      	mvns	r3, r3
 8000346:	4619      	mov	r1, r3
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	400a      	ands	r2, r1
 800034e:	609a      	str	r2, [r3, #8]
	p_GpioCfg_st->p_Gpio_Base_st->OSPEEDR |= TempValue_u32;
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	6899      	ldr	r1, [r3, #8]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	68fa      	ldr	r2, [r7, #12]
 800035c:	430a      	orrs	r2, r1
 800035e:	609a      	str	r2, [r3, #8]

	/* Pin pull-up pull-down configuration */
	TempValue_u32 = p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinPuPd_e << (2 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	685b      	ldr	r3, [r3, #4]
 8000364:	78db      	ldrb	r3, [r3, #3]
 8000366:	461a      	mov	r2, r3
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	685b      	ldr	r3, [r3, #4]
 800036c:	781b      	ldrb	r3, [r3, #0]
 800036e:	005b      	lsls	r3, r3, #1
 8000370:	fa02 f303 	lsl.w	r3, r2, r3
 8000374:	60fb      	str	r3, [r7, #12]
	/* Because number of bit is larger than 1, so need to clear before write */
	p_GpioCfg_st->p_Gpio_Base_st->PUPDR &= ~(0x3 << (2 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e));
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	68da      	ldr	r2, [r3, #12]
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	685b      	ldr	r3, [r3, #4]
 8000380:	781b      	ldrb	r3, [r3, #0]
 8000382:	005b      	lsls	r3, r3, #1
 8000384:	2103      	movs	r1, #3
 8000386:	fa01 f303 	lsl.w	r3, r1, r3
 800038a:	43db      	mvns	r3, r3
 800038c:	4619      	mov	r1, r3
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	400a      	ands	r2, r1
 8000394:	60da      	str	r2, [r3, #12]
	p_GpioCfg_st->p_Gpio_Base_st->PUPDR |= TempValue_u32;
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	68d9      	ldr	r1, [r3, #12]
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	68fa      	ldr	r2, [r7, #12]
 80003a2:	430a      	orrs	r2, r1
 80003a4:	60da      	str	r2, [r3, #12]

	/* Pin alternate function configuration */
	if(GPIO_PINNUM_8 < p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e)
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	685b      	ldr	r3, [r3, #4]
 80003aa:	781b      	ldrb	r3, [r3, #0]
 80003ac:	2b08      	cmp	r3, #8
 80003ae:	d924      	bls.n	80003fa <Gpio_Init+0x152>
	{
		Pos_u8 = (uint8_t)p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e - (uint8_t)8U;
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	685b      	ldr	r3, [r3, #4]
 80003b4:	781b      	ldrb	r3, [r3, #0]
 80003b6:	3b08      	subs	r3, #8
 80003b8:	72fb      	strb	r3, [r7, #11]
		TempValue_u32 = p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinAltFun_e << (4 * Pos_u8);
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	685b      	ldr	r3, [r3, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	461a      	mov	r2, r3
 80003c2:	7afb      	ldrb	r3, [r7, #11]
 80003c4:	009b      	lsls	r3, r3, #2
 80003c6:	fa02 f303 	lsl.w	r3, r2, r3
 80003ca:	60fb      	str	r3, [r7, #12]
		/* Because number of bit is larger than 1, so need to clear before write */
		p_GpioCfg_st->p_Gpio_Base_st->AFRH &= ~(0xF << (4 * Pos_u8));
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80003d2:	7afb      	ldrb	r3, [r7, #11]
 80003d4:	009b      	lsls	r3, r3, #2
 80003d6:	210f      	movs	r1, #15
 80003d8:	fa01 f303 	lsl.w	r3, r1, r3
 80003dc:	43db      	mvns	r3, r3
 80003de:	4619      	mov	r1, r3
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	400a      	ands	r2, r1
 80003e6:	625a      	str	r2, [r3, #36]	; 0x24
		p_GpioCfg_st->p_Gpio_Base_st->AFRH |= TempValue_u32;
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	68fa      	ldr	r2, [r7, #12]
 80003f4:	430a      	orrs	r2, r1
 80003f6:	625a      	str	r2, [r3, #36]	; 0x24
 80003f8:	e022      	b.n	8000440 <Gpio_Init+0x198>
	}
	else
	{
		TempValue_u32 = p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinAltFun_e << (4 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	685b      	ldr	r3, [r3, #4]
 80003fe:	795b      	ldrb	r3, [r3, #5]
 8000400:	461a      	mov	r2, r3
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	685b      	ldr	r3, [r3, #4]
 8000406:	781b      	ldrb	r3, [r3, #0]
 8000408:	009b      	lsls	r3, r3, #2
 800040a:	fa02 f303 	lsl.w	r3, r2, r3
 800040e:	60fb      	str	r3, [r7, #12]
		/* Because number of bit is larger than 1, so need to clear before write */
		p_GpioCfg_st->p_Gpio_Base_st->AFRL &= ~(0xF << (4 * p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e));
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	6a1a      	ldr	r2, [r3, #32]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	685b      	ldr	r3, [r3, #4]
 800041a:	781b      	ldrb	r3, [r3, #0]
 800041c:	009b      	lsls	r3, r3, #2
 800041e:	210f      	movs	r1, #15
 8000420:	fa01 f303 	lsl.w	r3, r1, r3
 8000424:	43db      	mvns	r3, r3
 8000426:	4619      	mov	r1, r3
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	400a      	ands	r2, r1
 800042e:	621a      	str	r2, [r3, #32]
		p_GpioCfg_st->p_Gpio_Base_st->AFRL |= TempValue_u32;
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	6a19      	ldr	r1, [r3, #32]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	68fa      	ldr	r2, [r7, #12]
 800043c:	430a      	orrs	r2, r1
 800043e:	621a      	str	r2, [r3, #32]
	}

	/* Interrupt configuration */
	if(GPIO_MODE_ANAL < p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinMode_e)
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	685b      	ldr	r3, [r3, #4]
 8000444:	785b      	ldrb	r3, [r3, #1]
 8000446:	2b03      	cmp	r3, #3
 8000448:	d95a      	bls.n	8000500 <Gpio_Init+0x258>
	{
		if(GPIO_MODE_IR_FE == p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinMode_e)
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	685b      	ldr	r3, [r3, #4]
 800044e:	785b      	ldrb	r3, [r3, #1]
 8000450:	2b04      	cmp	r3, #4
 8000452:	d119      	bne.n	8000488 <Gpio_Init+0x1e0>
		{
			EXTI->EXTI_FTSR |= (0x1 << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 8000454:	4b5d      	ldr	r3, [pc, #372]	; (80005cc <Gpio_Init+0x324>)
 8000456:	68db      	ldr	r3, [r3, #12]
 8000458:	687a      	ldr	r2, [r7, #4]
 800045a:	6852      	ldr	r2, [r2, #4]
 800045c:	7812      	ldrb	r2, [r2, #0]
 800045e:	4611      	mov	r1, r2
 8000460:	2201      	movs	r2, #1
 8000462:	408a      	lsls	r2, r1
 8000464:	4611      	mov	r1, r2
 8000466:	4a59      	ldr	r2, [pc, #356]	; (80005cc <Gpio_Init+0x324>)
 8000468:	430b      	orrs	r3, r1
 800046a:	60d3      	str	r3, [r2, #12]
			EXTI->EXTI_RTSR &= ~(0x1 << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 800046c:	4b57      	ldr	r3, [pc, #348]	; (80005cc <Gpio_Init+0x324>)
 800046e:	689b      	ldr	r3, [r3, #8]
 8000470:	687a      	ldr	r2, [r7, #4]
 8000472:	6852      	ldr	r2, [r2, #4]
 8000474:	7812      	ldrb	r2, [r2, #0]
 8000476:	4611      	mov	r1, r2
 8000478:	2201      	movs	r2, #1
 800047a:	408a      	lsls	r2, r1
 800047c:	43d2      	mvns	r2, r2
 800047e:	4611      	mov	r1, r2
 8000480:	4a52      	ldr	r2, [pc, #328]	; (80005cc <Gpio_Init+0x324>)
 8000482:	400b      	ands	r3, r1
 8000484:	6093      	str	r3, [r2, #8]
 8000486:	e03b      	b.n	8000500 <Gpio_Init+0x258>
		}
		else if(GPIO_MODE_IR_RE == p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinMode_e)
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	685b      	ldr	r3, [r3, #4]
 800048c:	785b      	ldrb	r3, [r3, #1]
 800048e:	2b05      	cmp	r3, #5
 8000490:	d119      	bne.n	80004c6 <Gpio_Init+0x21e>
		{
			EXTI->EXTI_FTSR &= ~(0x1 << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 8000492:	4b4e      	ldr	r3, [pc, #312]	; (80005cc <Gpio_Init+0x324>)
 8000494:	68db      	ldr	r3, [r3, #12]
 8000496:	687a      	ldr	r2, [r7, #4]
 8000498:	6852      	ldr	r2, [r2, #4]
 800049a:	7812      	ldrb	r2, [r2, #0]
 800049c:	4611      	mov	r1, r2
 800049e:	2201      	movs	r2, #1
 80004a0:	408a      	lsls	r2, r1
 80004a2:	43d2      	mvns	r2, r2
 80004a4:	4611      	mov	r1, r2
 80004a6:	4a49      	ldr	r2, [pc, #292]	; (80005cc <Gpio_Init+0x324>)
 80004a8:	400b      	ands	r3, r1
 80004aa:	60d3      	str	r3, [r2, #12]
			EXTI->EXTI_RTSR |= (0x1 << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 80004ac:	4b47      	ldr	r3, [pc, #284]	; (80005cc <Gpio_Init+0x324>)
 80004ae:	689b      	ldr	r3, [r3, #8]
 80004b0:	687a      	ldr	r2, [r7, #4]
 80004b2:	6852      	ldr	r2, [r2, #4]
 80004b4:	7812      	ldrb	r2, [r2, #0]
 80004b6:	4611      	mov	r1, r2
 80004b8:	2201      	movs	r2, #1
 80004ba:	408a      	lsls	r2, r1
 80004bc:	4611      	mov	r1, r2
 80004be:	4a43      	ldr	r2, [pc, #268]	; (80005cc <Gpio_Init+0x324>)
 80004c0:	430b      	orrs	r3, r1
 80004c2:	6093      	str	r3, [r2, #8]
 80004c4:	e01c      	b.n	8000500 <Gpio_Init+0x258>
		}
		else if(GPIO_MODE_IR_FRE == p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinMode_e)
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	685b      	ldr	r3, [r3, #4]
 80004ca:	785b      	ldrb	r3, [r3, #1]
 80004cc:	2b06      	cmp	r3, #6
 80004ce:	d117      	bne.n	8000500 <Gpio_Init+0x258>
		{
			EXTI->EXTI_FTSR |= (0x1 << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 80004d0:	4b3e      	ldr	r3, [pc, #248]	; (80005cc <Gpio_Init+0x324>)
 80004d2:	68db      	ldr	r3, [r3, #12]
 80004d4:	687a      	ldr	r2, [r7, #4]
 80004d6:	6852      	ldr	r2, [r2, #4]
 80004d8:	7812      	ldrb	r2, [r2, #0]
 80004da:	4611      	mov	r1, r2
 80004dc:	2201      	movs	r2, #1
 80004de:	408a      	lsls	r2, r1
 80004e0:	4611      	mov	r1, r2
 80004e2:	4a3a      	ldr	r2, [pc, #232]	; (80005cc <Gpio_Init+0x324>)
 80004e4:	430b      	orrs	r3, r1
 80004e6:	60d3      	str	r3, [r2, #12]
			EXTI->EXTI_RTSR |= (0x1 << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 80004e8:	4b38      	ldr	r3, [pc, #224]	; (80005cc <Gpio_Init+0x324>)
 80004ea:	689b      	ldr	r3, [r3, #8]
 80004ec:	687a      	ldr	r2, [r7, #4]
 80004ee:	6852      	ldr	r2, [r2, #4]
 80004f0:	7812      	ldrb	r2, [r2, #0]
 80004f2:	4611      	mov	r1, r2
 80004f4:	2201      	movs	r2, #1
 80004f6:	408a      	lsls	r2, r1
 80004f8:	4611      	mov	r1, r2
 80004fa:	4a34      	ldr	r2, [pc, #208]	; (80005cc <Gpio_Init+0x324>)
 80004fc:	430b      	orrs	r3, r1
 80004fe:	6093      	str	r3, [r2, #8]
		{
			/* Do nothing */
		}
	}
	/* Select port for Exit external interrupt  */
	Temp_u8 = (p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e) / 4;
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	685b      	ldr	r3, [r3, #4]
 8000504:	781b      	ldrb	r3, [r3, #0]
 8000506:	089b      	lsrs	r3, r3, #2
 8000508:	72bb      	strb	r3, [r7, #10]
	Pos_u8 = 4 * ((p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e) % 4);
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	685b      	ldr	r3, [r3, #4]
 800050e:	781b      	ldrb	r3, [r3, #0]
 8000510:	f003 0303 	and.w	r3, r3, #3
 8000514:	b2db      	uxtb	r3, r3
 8000516:	009b      	lsls	r3, r3, #2
 8000518:	72fb      	strb	r3, [r7, #11]

	switch ((uint32_t)p_GpioCfg_st->p_Gpio_Base_st)
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	4a2c      	ldr	r2, [pc, #176]	; (80005d0 <Gpio_Init+0x328>)
 8000520:	4293      	cmp	r3, r2
 8000522:	d02a      	beq.n	800057a <Gpio_Init+0x2d2>
 8000524:	4a2a      	ldr	r2, [pc, #168]	; (80005d0 <Gpio_Init+0x328>)
 8000526:	4293      	cmp	r3, r2
 8000528:	d82a      	bhi.n	8000580 <Gpio_Init+0x2d8>
 800052a:	4a2a      	ldr	r2, [pc, #168]	; (80005d4 <Gpio_Init+0x32c>)
 800052c:	4293      	cmp	r3, r2
 800052e:	d021      	beq.n	8000574 <Gpio_Init+0x2cc>
 8000530:	4a28      	ldr	r2, [pc, #160]	; (80005d4 <Gpio_Init+0x32c>)
 8000532:	4293      	cmp	r3, r2
 8000534:	d824      	bhi.n	8000580 <Gpio_Init+0x2d8>
 8000536:	4a28      	ldr	r2, [pc, #160]	; (80005d8 <Gpio_Init+0x330>)
 8000538:	4293      	cmp	r3, r2
 800053a:	d018      	beq.n	800056e <Gpio_Init+0x2c6>
 800053c:	4a26      	ldr	r2, [pc, #152]	; (80005d8 <Gpio_Init+0x330>)
 800053e:	4293      	cmp	r3, r2
 8000540:	d81e      	bhi.n	8000580 <Gpio_Init+0x2d8>
 8000542:	4a26      	ldr	r2, [pc, #152]	; (80005dc <Gpio_Init+0x334>)
 8000544:	4293      	cmp	r3, r2
 8000546:	d00f      	beq.n	8000568 <Gpio_Init+0x2c0>
 8000548:	4a24      	ldr	r2, [pc, #144]	; (80005dc <Gpio_Init+0x334>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d818      	bhi.n	8000580 <Gpio_Init+0x2d8>
 800054e:	4a24      	ldr	r2, [pc, #144]	; (80005e0 <Gpio_Init+0x338>)
 8000550:	4293      	cmp	r3, r2
 8000552:	d003      	beq.n	800055c <Gpio_Init+0x2b4>
 8000554:	4a23      	ldr	r2, [pc, #140]	; (80005e4 <Gpio_Init+0x33c>)
 8000556:	4293      	cmp	r3, r2
 8000558:	d003      	beq.n	8000562 <Gpio_Init+0x2ba>
			break;
		case (uint32_t)GPIOH:
			TempValue_u32 = 0x4U;
			break;
		default:
			break;
 800055a:	e011      	b.n	8000580 <Gpio_Init+0x2d8>
			TempValue_u32 = 0x0U;
 800055c:	2300      	movs	r3, #0
 800055e:	60fb      	str	r3, [r7, #12]
			break;
 8000560:	e00f      	b.n	8000582 <Gpio_Init+0x2da>
			TempValue_u32 = 0x1U;
 8000562:	2301      	movs	r3, #1
 8000564:	60fb      	str	r3, [r7, #12]
			break;
 8000566:	e00c      	b.n	8000582 <Gpio_Init+0x2da>
			TempValue_u32 = 0x2U;
 8000568:	2302      	movs	r3, #2
 800056a:	60fb      	str	r3, [r7, #12]
			break;
 800056c:	e009      	b.n	8000582 <Gpio_Init+0x2da>
			TempValue_u32 = 0x3U;
 800056e:	2303      	movs	r3, #3
 8000570:	60fb      	str	r3, [r7, #12]
			break;
 8000572:	e006      	b.n	8000582 <Gpio_Init+0x2da>
			TempValue_u32 = 0x4U;
 8000574:	2304      	movs	r3, #4
 8000576:	60fb      	str	r3, [r7, #12]
			break;
 8000578:	e003      	b.n	8000582 <Gpio_Init+0x2da>
			TempValue_u32 = 0x4U;
 800057a:	2304      	movs	r3, #4
 800057c:	60fb      	str	r3, [r7, #12]
			break;
 800057e:	e000      	b.n	8000582 <Gpio_Init+0x2da>
			break;
 8000580:	bf00      	nop
	}

	RCC_SYSCFG_CLK_EN();
 8000582:	4b19      	ldr	r3, [pc, #100]	; (80005e8 <Gpio_Init+0x340>)
 8000584:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000586:	4a18      	ldr	r2, [pc, #96]	; (80005e8 <Gpio_Init+0x340>)
 8000588:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800058c:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[Temp_u8] |= (TempValue_u32 << Pos_u8);
 800058e:	4a17      	ldr	r2, [pc, #92]	; (80005ec <Gpio_Init+0x344>)
 8000590:	7abb      	ldrb	r3, [r7, #10]
 8000592:	3302      	adds	r3, #2
 8000594:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8000598:	7afb      	ldrb	r3, [r7, #11]
 800059a:	68fa      	ldr	r2, [r7, #12]
 800059c:	409a      	lsls	r2, r3
 800059e:	4813      	ldr	r0, [pc, #76]	; (80005ec <Gpio_Init+0x344>)
 80005a0:	7abb      	ldrb	r3, [r7, #10]
 80005a2:	430a      	orrs	r2, r1
 80005a4:	3302      	adds	r3, #2
 80005a6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]

	/* Enable interrupt request from Exit line  */
	EXTI->EXTI_IMR |= (0x1 << p_GpioCfg_st->p_Gpio_Config_st->Gpio_PinNum_e);
 80005aa:	4b08      	ldr	r3, [pc, #32]	; (80005cc <Gpio_Init+0x324>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	687a      	ldr	r2, [r7, #4]
 80005b0:	6852      	ldr	r2, [r2, #4]
 80005b2:	7812      	ldrb	r2, [r2, #0]
 80005b4:	4611      	mov	r1, r2
 80005b6:	2201      	movs	r2, #1
 80005b8:	408a      	lsls	r2, r1
 80005ba:	4611      	mov	r1, r2
 80005bc:	4a03      	ldr	r2, [pc, #12]	; (80005cc <Gpio_Init+0x324>)
 80005be:	430b      	orrs	r3, r1
 80005c0:	6013      	str	r3, [r2, #0]

}
 80005c2:	bf00      	nop
 80005c4:	3714      	adds	r7, #20
 80005c6:	46bd      	mov	sp, r7
 80005c8:	bc80      	pop	{r7}
 80005ca:	4770      	bx	lr
 80005cc:	40013c00 	.word	0x40013c00
 80005d0:	40021c00 	.word	0x40021c00
 80005d4:	40021000 	.word	0x40021000
 80005d8:	40020c00 	.word	0x40020c00
 80005dc:	40020800 	.word	0x40020800
 80005e0:	40020000 	.word	0x40020000
 80005e4:	40020400 	.word	0x40020400
 80005e8:	40023800 	.word	0x40023800
 80005ec:	40013800 	.word	0x40013800

080005f0 <Gpio_ToggleOutPin>:
void   Gpio_WritePort(Gpio_Reg *p_Gpio_st, uint16_t Value_u16)
{
	p_Gpio_st->ODR = Value_u16;
}
void   Gpio_ToggleOutPin(Gpio_Reg *p_Gpio_st, Gpio_PinNum PinNum_u8)
{
 80005f0:	b480      	push	{r7}
 80005f2:	b083      	sub	sp, #12
 80005f4:	af00      	add	r7, sp, #0
 80005f6:	6078      	str	r0, [r7, #4]
 80005f8:	460b      	mov	r3, r1
 80005fa:	70fb      	strb	r3, [r7, #3]
	p_Gpio_st->ODR ^= (1 << PinNum_u8);
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	695b      	ldr	r3, [r3, #20]
 8000600:	78fa      	ldrb	r2, [r7, #3]
 8000602:	2101      	movs	r1, #1
 8000604:	fa01 f202 	lsl.w	r2, r1, r2
 8000608:	405a      	eors	r2, r3
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	615a      	str	r2, [r3, #20]
}
 800060e:	bf00      	nop
 8000610:	370c      	adds	r7, #12
 8000612:	46bd      	mov	sp, r7
 8000614:	bc80      	pop	{r7}
 8000616:	4770      	bx	lr

08000618 <Gpio_IrqConfig>:
void   Gpio_IrqConfig(Irq_Number IrqNum_u8, uint8_t Pri_u8, uint8_t State_u8)
{
 8000618:	b480      	push	{r7}
 800061a:	b085      	sub	sp, #20
 800061c:	af00      	add	r7, sp, #0
 800061e:	4603      	mov	r3, r0
 8000620:	71fb      	strb	r3, [r7, #7]
 8000622:	460b      	mov	r3, r1
 8000624:	71bb      	strb	r3, [r7, #6]
 8000626:	4613      	mov	r3, r2
 8000628:	717b      	strb	r3, [r7, #5]
	uint8_t IprRegister_u8;
	uint8_t Pos_u8;

	/* Set priority */
	IprRegister_u8 = IrqNum_u8 / 4;
 800062a:	79fb      	ldrb	r3, [r7, #7]
 800062c:	089b      	lsrs	r3, r3, #2
 800062e:	73fb      	strb	r3, [r7, #15]
	Pos_u8 = (8 * (IrqNum_u8 % 4)) + (8 - NVIC_IPR_LOW_BIT_UNUSED);
 8000630:	79fb      	ldrb	r3, [r7, #7]
 8000632:	f003 0303 	and.w	r3, r3, #3
 8000636:	b2db      	uxtb	r3, r3
 8000638:	00db      	lsls	r3, r3, #3
 800063a:	b2db      	uxtb	r3, r3
 800063c:	3304      	adds	r3, #4
 800063e:	73bb      	strb	r3, [r7, #14]

	*(NVIC_IPR + IprRegister_u8) |= (Pri_u8 << Pos_u8);
 8000640:	7bfb      	ldrb	r3, [r7, #15]
 8000642:	009b      	lsls	r3, r3, #2
 8000644:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000648:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800064c:	681a      	ldr	r2, [r3, #0]
 800064e:	79b9      	ldrb	r1, [r7, #6]
 8000650:	7bbb      	ldrb	r3, [r7, #14]
 8000652:	fa01 f303 	lsl.w	r3, r1, r3
 8000656:	4619      	mov	r1, r3
 8000658:	7bfb      	ldrb	r3, [r7, #15]
 800065a:	009b      	lsls	r3, r3, #2
 800065c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000660:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000664:	430a      	orrs	r2, r1
 8000666:	601a      	str	r2, [r3, #0]

	/* Enable interrupt corresponding to IRQ number */
	if(ENABLE == State_u8)
 8000668:	797b      	ldrb	r3, [r7, #5]
 800066a:	2b01      	cmp	r3, #1
 800066c:	d133      	bne.n	80006d6 <Gpio_IrqConfig+0xbe>
	{
		if(31 >= IrqNum_u8)
 800066e:	79fb      	ldrb	r3, [r7, #7]
 8000670:	2b1f      	cmp	r3, #31
 8000672:	d80a      	bhi.n	800068a <Gpio_IrqConfig+0x72>
		{
			*NVIC_ISER0 |= (1 << IrqNum_u8);
 8000674:	4b36      	ldr	r3, [pc, #216]	; (8000750 <Gpio_IrqConfig+0x138>)
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	79fa      	ldrb	r2, [r7, #7]
 800067a:	2101      	movs	r1, #1
 800067c:	fa01 f202 	lsl.w	r2, r1, r2
 8000680:	4611      	mov	r1, r2
 8000682:	4a33      	ldr	r2, [pc, #204]	; (8000750 <Gpio_IrqConfig+0x138>)
 8000684:	430b      	orrs	r3, r1
 8000686:	6013      	str	r3, [r2, #0]
		else
		{
			/* Do nothing */
		}
	}
}
 8000688:	e05c      	b.n	8000744 <Gpio_IrqConfig+0x12c>
		else if((32 <= IrqNum_u8) && (63 >= IrqNum_u8))
 800068a:	79fb      	ldrb	r3, [r7, #7]
 800068c:	2b1f      	cmp	r3, #31
 800068e:	d90f      	bls.n	80006b0 <Gpio_IrqConfig+0x98>
 8000690:	79fb      	ldrb	r3, [r7, #7]
 8000692:	2b3f      	cmp	r3, #63	; 0x3f
 8000694:	d80c      	bhi.n	80006b0 <Gpio_IrqConfig+0x98>
			*NVIC_ISER1 |= (1 << (IrqNum_u8 % 32));
 8000696:	4b2f      	ldr	r3, [pc, #188]	; (8000754 <Gpio_IrqConfig+0x13c>)
 8000698:	681b      	ldr	r3, [r3, #0]
 800069a:	79fa      	ldrb	r2, [r7, #7]
 800069c:	f002 021f 	and.w	r2, r2, #31
 80006a0:	2101      	movs	r1, #1
 80006a2:	fa01 f202 	lsl.w	r2, r1, r2
 80006a6:	4611      	mov	r1, r2
 80006a8:	4a2a      	ldr	r2, [pc, #168]	; (8000754 <Gpio_IrqConfig+0x13c>)
 80006aa:	430b      	orrs	r3, r1
 80006ac:	6013      	str	r3, [r2, #0]
 80006ae:	e049      	b.n	8000744 <Gpio_IrqConfig+0x12c>
		else if((64 <= IrqNum_u8) && (95 >= IrqNum_u8))
 80006b0:	79fb      	ldrb	r3, [r7, #7]
 80006b2:	2b3f      	cmp	r3, #63	; 0x3f
 80006b4:	d946      	bls.n	8000744 <Gpio_IrqConfig+0x12c>
 80006b6:	79fb      	ldrb	r3, [r7, #7]
 80006b8:	2b5f      	cmp	r3, #95	; 0x5f
 80006ba:	d843      	bhi.n	8000744 <Gpio_IrqConfig+0x12c>
			*NVIC_ISER2 |= (1 << (IrqNum_u8 % 64));
 80006bc:	4b26      	ldr	r3, [pc, #152]	; (8000758 <Gpio_IrqConfig+0x140>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	79fa      	ldrb	r2, [r7, #7]
 80006c2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80006c6:	2101      	movs	r1, #1
 80006c8:	fa01 f202 	lsl.w	r2, r1, r2
 80006cc:	4611      	mov	r1, r2
 80006ce:	4a22      	ldr	r2, [pc, #136]	; (8000758 <Gpio_IrqConfig+0x140>)
 80006d0:	430b      	orrs	r3, r1
 80006d2:	6013      	str	r3, [r2, #0]
}
 80006d4:	e036      	b.n	8000744 <Gpio_IrqConfig+0x12c>
	else if(DISABLE == State_u8)
 80006d6:	797b      	ldrb	r3, [r7, #5]
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d133      	bne.n	8000744 <Gpio_IrqConfig+0x12c>
		if(31 >= IrqNum_u8)
 80006dc:	79fb      	ldrb	r3, [r7, #7]
 80006de:	2b1f      	cmp	r3, #31
 80006e0:	d80a      	bhi.n	80006f8 <Gpio_IrqConfig+0xe0>
			*NVIC_ICER0 |= (1 << IrqNum_u8);
 80006e2:	4b1e      	ldr	r3, [pc, #120]	; (800075c <Gpio_IrqConfig+0x144>)
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	79fa      	ldrb	r2, [r7, #7]
 80006e8:	2101      	movs	r1, #1
 80006ea:	fa01 f202 	lsl.w	r2, r1, r2
 80006ee:	4611      	mov	r1, r2
 80006f0:	4a1a      	ldr	r2, [pc, #104]	; (800075c <Gpio_IrqConfig+0x144>)
 80006f2:	430b      	orrs	r3, r1
 80006f4:	6013      	str	r3, [r2, #0]
}
 80006f6:	e025      	b.n	8000744 <Gpio_IrqConfig+0x12c>
		else if((32 <= IrqNum_u8) && (63 >= IrqNum_u8))
 80006f8:	79fb      	ldrb	r3, [r7, #7]
 80006fa:	2b1f      	cmp	r3, #31
 80006fc:	d90f      	bls.n	800071e <Gpio_IrqConfig+0x106>
 80006fe:	79fb      	ldrb	r3, [r7, #7]
 8000700:	2b3f      	cmp	r3, #63	; 0x3f
 8000702:	d80c      	bhi.n	800071e <Gpio_IrqConfig+0x106>
			*NVIC_ICER1 |= (1 << (IrqNum_u8 % 32));
 8000704:	4b16      	ldr	r3, [pc, #88]	; (8000760 <Gpio_IrqConfig+0x148>)
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	79fa      	ldrb	r2, [r7, #7]
 800070a:	f002 021f 	and.w	r2, r2, #31
 800070e:	2101      	movs	r1, #1
 8000710:	fa01 f202 	lsl.w	r2, r1, r2
 8000714:	4611      	mov	r1, r2
 8000716:	4a12      	ldr	r2, [pc, #72]	; (8000760 <Gpio_IrqConfig+0x148>)
 8000718:	430b      	orrs	r3, r1
 800071a:	6013      	str	r3, [r2, #0]
 800071c:	e012      	b.n	8000744 <Gpio_IrqConfig+0x12c>
		else if((64 <= IrqNum_u8) && (95 >= IrqNum_u8))
 800071e:	79fb      	ldrb	r3, [r7, #7]
 8000720:	2b3f      	cmp	r3, #63	; 0x3f
 8000722:	d90f      	bls.n	8000744 <Gpio_IrqConfig+0x12c>
 8000724:	79fb      	ldrb	r3, [r7, #7]
 8000726:	2b5f      	cmp	r3, #95	; 0x5f
 8000728:	d80c      	bhi.n	8000744 <Gpio_IrqConfig+0x12c>
			*NVIC_ICER2 |= (1 << (IrqNum_u8 % 64));
 800072a:	4b0e      	ldr	r3, [pc, #56]	; (8000764 <Gpio_IrqConfig+0x14c>)
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	79fa      	ldrb	r2, [r7, #7]
 8000730:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000734:	2101      	movs	r1, #1
 8000736:	fa01 f202 	lsl.w	r2, r1, r2
 800073a:	4611      	mov	r1, r2
 800073c:	4a09      	ldr	r2, [pc, #36]	; (8000764 <Gpio_IrqConfig+0x14c>)
 800073e:	430b      	orrs	r3, r1
 8000740:	6013      	str	r3, [r2, #0]
}
 8000742:	e7ff      	b.n	8000744 <Gpio_IrqConfig+0x12c>
 8000744:	bf00      	nop
 8000746:	3714      	adds	r7, #20
 8000748:	46bd      	mov	sp, r7
 800074a:	bc80      	pop	{r7}
 800074c:	4770      	bx	lr
 800074e:	bf00      	nop
 8000750:	e000e100 	.word	0xe000e100
 8000754:	e000e104 	.word	0xe000e104
 8000758:	e000e108 	.word	0xe000e108
 800075c:	e000e180 	.word	0xe000e180
 8000760:	e000e184 	.word	0xe000e184
 8000764:	e000e188 	.word	0xe000e188

08000768 <Gpio_IrqHandler>:
void Gpio_IrqHandler(Gpio_PinNum PinNum_u8)
{
 8000768:	b480      	push	{r7}
 800076a:	b083      	sub	sp, #12
 800076c:	af00      	add	r7, sp, #0
 800076e:	4603      	mov	r3, r0
 8000770:	71fb      	strb	r3, [r7, #7]
	if((EXTI->EXTI_PR) & (1 << PinNum_u8))
 8000772:	4b0c      	ldr	r3, [pc, #48]	; (80007a4 <Gpio_IrqHandler+0x3c>)
 8000774:	695b      	ldr	r3, [r3, #20]
 8000776:	79fa      	ldrb	r2, [r7, #7]
 8000778:	2101      	movs	r1, #1
 800077a:	fa01 f202 	lsl.w	r2, r1, r2
 800077e:	4013      	ands	r3, r2
 8000780:	2b00      	cmp	r3, #0
 8000782:	d009      	beq.n	8000798 <Gpio_IrqHandler+0x30>
	{
		/* Clear bit pending */
		EXTI->EXTI_PR |= (1 << PinNum_u8);
 8000784:	4b07      	ldr	r3, [pc, #28]	; (80007a4 <Gpio_IrqHandler+0x3c>)
 8000786:	695b      	ldr	r3, [r3, #20]
 8000788:	79fa      	ldrb	r2, [r7, #7]
 800078a:	2101      	movs	r1, #1
 800078c:	fa01 f202 	lsl.w	r2, r1, r2
 8000790:	4611      	mov	r1, r2
 8000792:	4a04      	ldr	r2, [pc, #16]	; (80007a4 <Gpio_IrqHandler+0x3c>)
 8000794:	430b      	orrs	r3, r1
 8000796:	6153      	str	r3, [r2, #20]
	}
}
 8000798:	bf00      	nop
 800079a:	370c      	adds	r7, #12
 800079c:	46bd      	mov	sp, r7
 800079e:	bc80      	pop	{r7}
 80007a0:	4770      	bx	lr
 80007a2:	bf00      	nop
 80007a4:	40013c00 	.word	0x40013c00

080007a8 <__libc_init_array>:
 80007a8:	b570      	push	{r4, r5, r6, lr}
 80007aa:	4d0d      	ldr	r5, [pc, #52]	; (80007e0 <__libc_init_array+0x38>)
 80007ac:	4c0d      	ldr	r4, [pc, #52]	; (80007e4 <__libc_init_array+0x3c>)
 80007ae:	1b64      	subs	r4, r4, r5
 80007b0:	10a4      	asrs	r4, r4, #2
 80007b2:	2600      	movs	r6, #0
 80007b4:	42a6      	cmp	r6, r4
 80007b6:	d109      	bne.n	80007cc <__libc_init_array+0x24>
 80007b8:	4d0b      	ldr	r5, [pc, #44]	; (80007e8 <__libc_init_array+0x40>)
 80007ba:	4c0c      	ldr	r4, [pc, #48]	; (80007ec <__libc_init_array+0x44>)
 80007bc:	f000 f818 	bl	80007f0 <_init>
 80007c0:	1b64      	subs	r4, r4, r5
 80007c2:	10a4      	asrs	r4, r4, #2
 80007c4:	2600      	movs	r6, #0
 80007c6:	42a6      	cmp	r6, r4
 80007c8:	d105      	bne.n	80007d6 <__libc_init_array+0x2e>
 80007ca:	bd70      	pop	{r4, r5, r6, pc}
 80007cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80007d0:	4798      	blx	r3
 80007d2:	3601      	adds	r6, #1
 80007d4:	e7ee      	b.n	80007b4 <__libc_init_array+0xc>
 80007d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80007da:	4798      	blx	r3
 80007dc:	3601      	adds	r6, #1
 80007de:	e7f2      	b.n	80007c6 <__libc_init_array+0x1e>
 80007e0:	08000808 	.word	0x08000808
 80007e4:	08000808 	.word	0x08000808
 80007e8:	08000808 	.word	0x08000808
 80007ec:	0800080c 	.word	0x0800080c

080007f0 <_init>:
 80007f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007f2:	bf00      	nop
 80007f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007f6:	bc08      	pop	{r3}
 80007f8:	469e      	mov	lr, r3
 80007fa:	4770      	bx	lr

080007fc <_fini>:
 80007fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007fe:	bf00      	nop
 8000800:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000802:	bc08      	pop	{r3}
 8000804:	469e      	mov	lr, r3
 8000806:	4770      	bx	lr
